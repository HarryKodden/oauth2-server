# OAuth2 Server Configuration

server:
  base_url: "http://localhost:8080"
  port: 8080
  host: "localhost"
  read_timeout: 30
  write_timeout: 30
  shutdown_timeout: 5

security:
  jwt_signing_key: "your-secret-key-here"
  token_expiry_seconds: 3600
  refresh_token_expiry_seconds: 86400
  device_code_expiry_seconds: 600
  enable_pkce: true
  require_https: false

proxy:
  trust_headers: true
  public_base_url: "" # Leave empty to auto-detect
  force_https: false
  trusted_proxies:
    - "10.0.0.0/8"
    - "172.16.0.0/12"
    - "192.168.0.0/16"

logging:
  level: "debug"
  format: "json"
  enable_audit: true

clients:
  # Frontend SPA Client
  - id: "frontend-app"
    secret: "frontend-secret"
    name: "Frontend Application"
    description: "Main frontend SPA application"
    redirect_uris:
      - "http://localhost:8080/client1/callback"
      - "http://localhost:8080/callback"
    grant_types:
      - "authorization_code"
      - "refresh_token"
    response_types:
      - "code"
    scopes:
      - "openid"
      - "profile"
      - "email"
      - "api:read"
    audience:
      - "api-service"
    token_endpoint_auth_method: "client_secret_basic"
    public: false
    enabled_flows:
      - "authorization_code"
      - "refresh_token"

  # Backend Service Client
  - id: "backend-client"
    secret: "backend-client-secret"
    name: "Backend Service"
    description: "Internal backend service for server-to-server communication"
    redirect_uris: []
    grant_types:
      - "client_credentials"
      - "urn:ietf:params:oauth:grant-type:token-exchange"
      - "refresh_token"
    response_types: []
    scopes:
      - "api:read"
      - "api:write"
      - "api:admin"
    audience:
      - "api-service"
    token_endpoint_auth_method: "client_secret_basic"
    public: false
    enabled_flows:
      - "client_credentials"
      - "token_exchange"

  # Device Flow Client
  - id: "frontend-client"
    secret: "frontend-client-secret"
    name: "Frontend Client Application"
    description: "Frontend client that supports device flow"
    redirect_uris: []
    grant_types:
      - "urn:ietf:params:oauth:grant-type:device_code"
      - "refresh_token"
    response_types: []
    scopes:
      - "openid"
      - "profile"
      - "email"
      - "api:read"
    audience:
      - "api-service"
    token_endpoint_auth_method: "client_secret_basic"
    public: false
    enabled_flows:
      - "device_code"

  # Mobile App Client (Public)
  - id: "mobile-app"
    secret: ""
    name: "Mobile Application"
    description: "Mobile application client"
    redirect_uris:
      - "com.example.app://oauth/callback"
    grant_types:
      - "authorization_code"
      - "refresh_token"
      - "urn:ietf:params:oauth:grant-type:device_code"
    response_types:
      - "code"
    scopes:
      - "openid"
      - "profile"
      - "email"
      - "api:read"
    audience:
      - "api-service"
    token_endpoint_auth_method: "none"
    public: true
    enabled_flows:
      - "authorization_code"
      - "device_code"

  # Smart TV Device Flow Client
  - id: "smart-tv-app"
    secret: "tv-secret"
    name: "Smart TV Application"
    description: "Smart TV or IoT device application"
    redirect_uris: []
    grant_types:
      - "urn:ietf:params:oauth:grant-type:device_code"
      - "refresh_token"
    response_types: []
    scopes:
      - "openid"
      - "profile"
      - "api:read"
    audience:
      - "api-service"
    token_endpoint_auth_method: "client_secret_basic"
    public: false
    enabled_flows:
      - "device_code"

users:
  # Test users for development and testing
  - id: "user-001"
    username: "john.doe"
    password: "password123"
    name: "John Doe"
    email: "john.doe@example.com"
    enabled: true
    roles:
      - "user"
    scopes:
      - "openid"
      - "profile"
      - "email"
      - "api:read"

  - id: "user-002"
    username: "jane.smith"
    password: "secret456"
    name: "Jane Smith"
    email: "jane.smith@example.com"
    enabled: true
    roles:
      - "user"
      - "admin"
    scopes:
      - "openid"
      - "profile"
      - "email"
      - "api:read"
      - "api:write"
      - "api:admin"

  - id: "user-003"
    username: "testuser"
    password: "testpass"
    name: "Test User"
    email: "test@example.com"
    enabled: true
    roles:
      - "user"
    scopes:
      - "openid"
      - "profile"
      - "email"
      - "api:read"
